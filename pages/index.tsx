import React, { useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Footer from "../components/molecules/Footer";
import styles from "../css/Home.module.scss";
import api from "../services/api";
import { Product } from "../interfaces/product";
import { Button, Spinner } from "react-bootstrap";
import Carousel from "react-multi-carousel";
import "react-multi-carousel/lib/styles.css";
import Image from "next/image";
import Link from "next/link";

const Home: NextPage = () => {
  const [data, setData] = useState<Product[]>([]);
  const [loading, setLoading] = useState<boolean>(true);

  const addToCart = (id: number) => {};
  const listItems = () => {
    api.get("/Product").then((response) => {
      setLoading(false);
      setData(response.data);
    });
  };
  const mapPrices = data && data.map((price): any => price.price);
  const productLowPrice = Math.min(...mapPrices);
  const featureProd =
    data && data.find((item) => parseInt(item.price) === productLowPrice);

  useEffect(() => {
    listItems();
  }, []);

  const responsive = {
    superLargeDesktop: {
      breakpoint: { max: 4000, min: 3000 },
      items: 5,
    },
    desktop: {
      breakpoint: { max: 3000, min: 1024 },
      items: 3,
    },
    tablet: {
      breakpoint: { max: 1024, min: 464 },
      items: 2,
    },
    mobile: {
      breakpoint: { max: 464, min: 0 },
      items: 1,
    },
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Add to cart test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className={styles.title}>Exemplo uso carrinho</h1>

      <div>
        {data && data.length && (
          <>
            <h1>{featureProd?.name}</h1>
            <h2>{featureProd?.desc}</h2>
          </>
        )}
      </div>
      <main className={styles.main}>
        {loading ? (
          <Spinner
            as="span"
            animation="border"
            size="sm"
            role="status"
            aria-hidden="true"
          />
        ) : data && data.length ? (
          <Carousel responsive={responsive} itemClass="p-3">
            {data.map((item: Product, index: number) => (
              <div key={index}>
                <Image
                  src={item.img}
                  width={500}
                  height={500}
                  alt={item.desc}
                />
                <Link href={item.slug}>{item.name}</Link>
                <p>{item.desc}</p>
                <div>${item.price}</div>
                <p className="small">stock: {item.stock}</p>
                {item.stock > 0 && (
                  <Button onClick={() => addToCart(item.id)}>
                    Add to cart
                  </Button>
                )}
              </div>
            ))}
          </Carousel>
        ) : (
          <p>Nada a exibir</p>
        )}
      </main>
      <Footer />
    </div>
  );
};

export default Home;
